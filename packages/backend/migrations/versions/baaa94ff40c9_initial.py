"""initial

Revision ID: baaa94ff40c9
Revises: 
Create Date: 2023-09-04 00:11:58.229455

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'baaa94ff40c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('sport_kind', sa.Enum('ORIENT', 'RUN', 'BIKE', 'CXSKI', 'ST', name='sportkind'), nullable=True),
    sa.Column('status', sa.Enum('PLANNED', 'IN_PROGRESS', 'CLOSED', name='status'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'sport_kind', name='event_unique_constraint')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('user_competition_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('VIEWER', 'COMPETITOR', 'JUDGE', 'OWNER', name='usercompetitionrole'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_event_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('VIEWER', 'COMPETITOR', 'JUDGE', 'OWNER', name='usercompetitionrole'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mobile_number', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('qualify', sa.Enum('MSMK', 'ZMS', 'MS', 'KMS', 'I', 'II', 'III', 'Iun', 'IIun', 'IIIun', name='qualify'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name', 'last_name', 'birthdate', name='user_unique_constraint'),
    sa.UniqueConstraint('mobile_number')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('class_list', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('control_point_list', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('sport_kind', sa.Enum('ORIENT', 'RUN', 'BIKE', 'CXSKI', 'ST', name='sportkind'), nullable=True),
    sa.Column('format', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('event', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event'], ['events.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_competitions_id'), 'competitions', ['id'], unique=False)
    op.create_table('users_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('event', sa.Integer(), nullable=False),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event'], ['events.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role'], ['user_event_roles.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_events_id'), 'users_events', ['id'], unique=False)
    op.create_table('users_competitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('competition', sa.Integer(), nullable=False),
    sa.Column('role', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['competition'], ['competitions.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role'], ['user_competition_roles.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_competitions_id'), 'users_competitions', ['id'], unique=False)
    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('sport_kind', sa.Enum('ORIENT', 'RUN', 'BIKE', 'CXSKI', 'ST', name='sportkind'), nullable=True),
    sa.Column('user', sa.Integer(), nullable=False),
    sa.Column('competition', sa.Integer(), nullable=True),
    sa.Column('fit_file', sa.String(), nullable=True),
    sa.Column('gpx_file', sa.String(), nullable=True),
    sa.Column('tcx_file', sa.String(), nullable=True),
    sa.Column('splits', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['competition'], ['competitions.id'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'sport_kind', 'user', name='workout_unique_constraint')
    )
    op.create_index(op.f('ix_workouts_id'), 'workouts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workouts_id'), table_name='workouts')
    op.drop_table('workouts')
    op.drop_index(op.f('ix_users_competitions_id'), table_name='users_competitions')
    op.drop_table('users_competitions')
    op.drop_index(op.f('ix_users_events_id'), table_name='users_events')
    op.drop_table('users_events')
    op.drop_index(op.f('ix_competitions_id'), table_name='competitions')
    op.drop_table('competitions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('user_event_roles')
    op.drop_table('user_competition_roles')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ###
